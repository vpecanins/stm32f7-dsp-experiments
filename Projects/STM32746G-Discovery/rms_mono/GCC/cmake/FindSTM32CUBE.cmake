SET(STM32CUBE_SEARCH_PATHS ".." "../.." "../../.." "../../../.." "../../../../..")

IF(CHIP_PLATFORM STREQUAL "STM32")
	MESSAGE(STATUS "Searching for STM32Cube SDK.")
ELSE()
	MESSAGE(FATAL_ERROR "STM32Cube SDK is only supported with STM32 platform.")
ENDIF()

FUNCTION(CHECK_STM32CUBE B_PATH)
	GET_FILENAME_COMPONENT(A_PATH ${B_PATH} ABSOLUTE)
	IF(NOT EXISTS ${A_PATH})
		SET(IS_STM32CUBE FALSE PARENT_SCOPE)
	ELSE()
		IF(NOT EXISTS ${A_PATH}/Drivers)
			SET(IS_STM32CUBE FALSE PARENT_SCOPE)
		ELSE()
			IF(NOT EXISTS ${A_PATH}/Drivers/CMSIS)
				SET(IS_STM32CUBE FALSE PARENT_SCOPE)
			ELSEIF(NOT EXISTS ${A_PATH}/Drivers/BSP)
				SET(IS_STM32CUBE FALSE PARENT_SCOPE)
			ELSE()
				FILE(GLOB C_PATH "${A_PATH}/Drivers/${CHIP_PLATFORM}${CHIP_FAMILY}*")
				IF(C_PATH)
					SET(IS_STM32CUBE TRUE PARENT_SCOPE)
				ELSE()
					SET(IS_STM32CUBE FALSE PARENT_SCOPE)
				ENDIF()
			ENDIF()
		ENDIF()
	ENDIF()
ENDFUNCTION()

IF(NOT STM32CUBE_ROOT) 
	FOREACH(i ${STM32CUBE_SEARCH_PATHS})
		CHECK_STM32CUBE(${i})
		IF(IS_STM32CUBE)
			SET(STM32CUBE_ROOT ${i})
			MESSAGE(STATUS "Found STM32CUBE: ${STM32CUBE_ROOT}")
			BREAK()
		ENDIF()
	ENDFOREACH()
	IF(NOT STM32CUBE_ROOT)
		MESSAGE(FATAL_ERROR "Could not find STM32CUBE in any of the search paths: ${STM32CUBE_SEARCH_PATHS}") 
	ENDIF()
ELSE()
	CHECK_STM32CUBE(STM32CUBE_ROOT)
	IF(IS_STM32CUBE)
		MESSAGE(STATUS "Using supplied STM32CUBE_ROOT: ${STM32CUBE_ROOT}") 
	ELSE()
		MESSAGE(FATAL_ERROR "STM32Cube not found in STM32CUBE_ROOT: ${STM32CUBE_ROOT}")
	ENDIF()
ENDIF()

SET(STM32CUBE_CMSIS ${STM32CUBE_ROOT}/Drivers/CMSIS)
SET(STM32CUBE_HAL ${STM32CUBE_ROOT}/Drivers/STM32${CHIP_FAMILY}xx_HAL_Driver)
SET(STM32CUBE_BSP ${STM32CUBE_ROOT}/Drivers/BSP/STM32746G-Discovery)
SET(STM32CUBE_BSP_COMPONENTS ${STM32CUBE_ROOT}/Drivers/BSP/Components)

# Find Include Directories
FUNCTION(FIND_HEADER_DIRS VAR FOLDER)

	FILE(GLOB_RECURSE HEADER_DIRS_R "${FOLDER}/*.h")
	SET(HEADER_DIRS_1 "")

	FOREACH(i ${HEADER_DIRS_R})
		GET_FILENAME_COMPONENT(T1 ${i} REALPATH)
		GET_FILENAME_COMPONENT(T2 ${T1} PATH)
		LIST(APPEND HEADER_DIRS_1 ${T2})
	ENDFOREACH()

	LIST(REMOVE_DUPLICATES HEADER_DIRS_1)
	SET(${VAR} ${HEADER_DIRS_1} PARENT_SCOPE)

ENDFUNCTION()

# CMSIS Include dirs
FIND_HEADER_DIRS(STM32CUBE_CMSIS_INC_DIRS ${STM32CUBE_CMSIS}/Device)
GET_FILENAME_COMPONENT(T1 "${STM32CUBE_CMSIS}/Include" REALPATH)
LIST(APPEND STM32CUBE_CMSIS_INC_DIRS ${T1})

# HAL Include dirs
SET(STM32CUBE_HAL_INC_DIRS ${STM32CUBE_HAL}/Inc)

# BSP Include dirs
FIND_HEADER_DIRS(STM32CUBE_BSP_COMPONENTS_INC_DIRS ${STM32CUBE_BSP_COMPONENTS})
FIND_HEADER_DIRS(STM32CUBE_BSP_INC_DIRS ${STM32CUBE_BSP})

LIST(APPEND STM32CUBE_INC_DIRS ${STM32CUBE_CMSIS_INC_DIRS})
LIST(APPEND STM32CUBE_INC_DIRS ${STM32CUBE_HAL_INC_DIRS})
LIST(APPEND STM32CUBE_INC_DIRS ${STM32CUBE_BSP_INC_DIRS})

#MESSAGE(STATUS ${STM32CUBE_INC_DIRS})

INCLUDE(FindPackageHandleStandardArgs) 
FIND_PACKAGE_HANDLE_STANDARD_ARGS(STM32CUBE DEFAULT_MSG STM32CUBE_ROOT STM32CUBE_INC_DIRS STM32CUBE_SOURCES) 
